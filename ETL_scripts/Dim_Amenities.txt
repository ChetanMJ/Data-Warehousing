insert into dbo.Temp_Table_YN(Indicator)values('Y');
insert into dbo.Temp_Table_YN(Indicator)values('N');


Insert into dbo.Dim_Amenities (TV, Internet, Wifi, Free_Parking, Kitchen, Air_Conditioning) 
select TV, Internet, Wifi, Free_Parking, Kitchen, Air_Conditioning from
(select Indicator as TV from dbo.Temp_Table_YN) A
CROSS JOIN
(select Indicator as Internet from dbo.Temp_Table_YN) B
CROSS JOIN
(select Indicator as Wifi from dbo.Temp_Table_YN) C
CROSS JOIN
(select Indicator as Free_Parking from dbo.Temp_Table_YN) D
CROSS JOIN
(select Indicator as Kitchen from dbo.Temp_Table_YN) E
CROSS JOIN
(select Indicator as Air_Conditioning from dbo.Temp_Table_YN) F
;




############## Dim_Review
Insert into dbo.Temp_Table_Score(Score)values('1');
Insert into dbo.Temp_Table_Score(Score)values('2');
Insert into dbo.Temp_Table_Score(Score)values('3');
Insert into dbo.Temp_Table_Score(Score)values('4');
Insert into dbo.Temp_Table_Score(Score)values('5');

insert into dbo.Dim_Review (Ratings_Score, Cleanliness_Score, Checkin_Score, Communication_Score, Location_Score, Value_Score)
Select Ratings_Score, Cleanliness_Score, Checkin_Score, Communication_Score, Location_Score, Value_Score
from
(select Score as  Ratings_Score from dbo.Temp_Table_Score) A
CROSS JOIN
(select Score as  Cleanliness_Score from dbo.Temp_Table_Score) B
CROSS JOIN
(select Score as  Checkin_Score from dbo.Temp_Table_Score) C
CROSS JOIN
(select Score as  Communication_Score from dbo.Temp_Table_Score) D
CROSS JOIN
(select Score as  Location_Score from dbo.Temp_Table_Score) E
CROSS JOIN
(select Score as  Value_Score from dbo.Temp_Table_Score) F
;


########## DIm_List
Insert into dbo.Dim_List(List_ID, List_Name, Summary, Street, Square_Feet, Active_Ind, Eff_Start_date)
select distinct CONVERT( numeric(18,0), CONVERT(varchar(max), id)) as List_ID,
CONVERT(varchar(max), name) as List_Name,
CONVERT(varchar(max), summary) as Summary,
CONVERT(varchar(max), Street) as Street,
CONVERT( numeric(18,0), CONVERT(varchar(max), Square_Feet)) as Square_Feet, 
'Y' as Active_Ind,
CONVERT(date, GETDATE()) as Eff_Start_date
from dbo.listings_detailed
;


######## DIM_Host
INSERT INTO dbo.Dim_Host(Host_ID, Host_Name, Host_Location, Host_Neighbourhood, Host_url, Host_About, Host_Response_Range, Host_Acceptance_Range, Host_is_Superhost,
Host_Identity_Verified, Host_Total_Listings_Count, Active_Ind, Eff_Start_date)
select distinct CONVERT( numeric(18,0), CONVERT(varchar(max), Host_id)) as Host_ID,
CONVERT(varchar(max), host_name) as host_name,
CONVERT(varchar(max), host_location) as host_location,
CONVERT(varchar(max), host_neighbourhood) as host_neighbourhood,
CONVERT(varchar(max), host_url) as host_url,
CONVERT(varchar(max), host_about) as host_about,
case when CONVERT(varchar(max), Host_Response_Rate)='N/A' then 'N/A'
     when CONVERT(INT, CONVERT(varchar(max), Host_Response_Rate)) <=50 then 'LOW'
	 when (CONVERT(INT, CONVERT(varchar(max), Host_Response_Rate)) > 50) and (CONVERT(INT, CONVERT(varchar(max), Host_Response_Rate)) <= 80) then 'MEDIUM'
	 when (CONVERT(INT, CONVERT(varchar(max), Host_Response_Rate)) > 80) then 'HIGH'
	 END as Host_Response_Range, 
case when CONVERT(varchar(max), Host_Acceptance_Rate)='N/A' then 'N/A'
     when CONVERT(INT, CONVERT(varchar(max), Host_Acceptance_Rate)) <=50 then 'LOW'
	 when (CONVERT(INT, CONVERT(varchar(max), Host_Acceptance_Rate)) > 50) and (CONVERT(INT, CONVERT(varchar(max), Host_Acceptance_Rate)) <= 80) then 'MEDIUM'
	 when (CONVERT(INT, CONVERT(varchar(max), Host_Acceptance_Rate)) > 80) then 'HIGH'
	 END as Host_Acceptance_Range, 
CONVERT(char(1), Host_is_superhost) as Host_is_superhost,
CONVERT(char(1), Host_Identity_verified) as Host_Identity_verified,
CONVERT( int, CONVERT(varchar(max), host_total_listings_count)) as host_total_listings_count, 
'Y' as Active_Ind,
CONVERT(date, GETDATE()) as Eff_Start_date
from dbo.listings_detailed
;

## remove duplicates in host
delete from dbo.dim_host
where host_key in
(select host_key from dbo.dim_host where host_id in
(select host_id from dbo.dim_host
  group by host_id
 having count(*) > 1
 ) and host_about is null
 )
;




#### Fact_bookings

insert into dbo.source_calendar(list_id, date, price)
select CONVERT(numeric(18,0), CONVERT(varchar(max), listing_id)) as list_id,
date as date,
CONVERT(numeric(18,2),substring(CONVERT(varchar(max), price), 2, len(CONVERT(varchar(max), price)))) as price
from dbo.Calendar
where substring(CONVERT(varchar(max), price), 1, 1) = '$';



delete from dbo.source_calendar_temp;

insert into dbo.source_calendar_temp(list_id,occupy_date, continuous_days,total_price)
select list_id,occupy_date, continuous_days, total_price
from
(
select list_id,occupy_date,
       sum(price) over (partition by list_id, continuous_begin_date) as total_price,
       max(rolling_continuous_days) over (partition by list_id, continuous_begin_date) as continuous_days,
	   continuos_days_begin
from
(
select list_id, 
       occupy_date, price,
	   DATEDIFF(day, max(case when continuos_days_begin='1' then occupy_date end) over (partition by list_id order by occupy_date), occupy_date) + 1  as rolling_continuous_days,
	   max(case when continuos_days_begin='1' then occupy_date end) over (partition by list_id order by occupy_date) as continuous_begin_date,
	   continuos_days_begin,
	   lead(continuos_days_begin) over(partition by list_id order by occupy_date) as next_continuos_days_begin
	   from
(
	select list_id,
		occupy_date, price,
		case when DATEDIFF(day, previous_date, occupy_date) = '1' then '0'
				when previous_date is null then '1'
				when DATEDIFF(day, previous_date, occupy_date) > '1' then '1' end as continuos_days_begin
	from
		(
		select list_id, date as occupy_date, lag(date) over (partition by list_id order by date) as previous_date, price
		from
		dbo.source_calendar
		--where list_id = '102040'
		) x
) y
--order by occupy_date
) z
--order by occupy_date
) zz
where continuos_days_begin = 1
;



delete from dbo.source_calendar_temp2;

DECLARE @cnt INT = 0;

WHILE @CNT < 54
BEGIN

   INSERT INTO dbo.source_calendar_temp2 (list_id,occupy_date, continuous_days,total_price)
   select list_id, occupy_date,  7 as continuous_days, (total_price/continuous_days)*7 as total_price from dbo.source_calendar_temp
   where continuous_days > 7
   ;

   Update dbo.source_calendar_temp
   set occupy_date = DATEADD(day, 7, occupy_date),
       total_price = total_price - ((total_price/continuous_days)*7),
	   continuous_days = continuous_days - 7
	where continuous_days > 7
   ;
   SET @cnt = @cnt + 1;
END;


insert into dbo.source_calendar_temp2
select * from dbo.source_calendar_temp where total_price is not null;


### final step

insert into Fact_bookings(
List_Key,
Host_Key,
Date_Key,
Property_Type_Key,
Amenity_Key,
Location_key,
Number_of_days,
Total_price,
Cleaning_Fee,
Security_Deposit,
review_key
)
select distinct
d.list_key,
c.host_key,
e.date_key,
h.Property_Type_Key,
f.Amenity_Key,
g.Location_Key,
a.continuous_days as Number_of_days,
a.total_price,
b.cleaning_fee,
b.security_deposit,
i.review_key

from dbo.source_calendar_temp2 a
join dbo.listings_detailed b
on a.list_id = CONVERT( numeric(18,0), CONVERT(varchar(max), id))

join dbo.dim_host c
on c.host_id = CONVERT( numeric(18,0), CONVERT(varchar(max), b.Host_id))
and c.Active_Ind = 'Y'

join dbo.dim_list d
on d.list_id = a.list_id
and d.Active_Ind = 'Y'

join dbo.Dim_Date e
on a.occupy_date = e.Date

join dbo.Dim_Amenities f
on f.tv = (case when lower(CONVERT(varchar(max), b.amenities)) like '%tv%' then 'Y' else 'N' end)
and f.internet = (case when lower(CONVERT(varchar(max), amenities)) like '%internet%' then 'Y' else 'N' end)
and f.wifi = (case when lower(CONVERT(varchar(max), amenities)) like '%wifi%' then 'Y' else 'N' end)
and f.free_parking = (case when lower(CONVERT(varchar(max), amenities)) like '%free parking%' then 'Y' else 'N' end) 
and f.kitchen = (case when lower(CONVERT(varchar(max), amenities)) like '%kitchen%' then 'Y' else 'N' end)
and f.air_conditioning = (case when lower(CONVERT(varchar(max), amenities)) like '%air condition%' then 'Y' else 'N' end) 

join dbo.Dim_Location g
on g.Neighbourhood_Group = CONVERT(varchar(max), b.neighbourhood_group_cleansed)
and g.Neighbourhood = CONVERT(varchar(max), b.neighbourhood)
and g.city = CONVERT(varchar(max), b.city)
and g.State = CONVERT(varchar(max), b.state)
and g.zipcode = (case when CONVERT(varchar(50), b.zipcode) like '%.00' 
                     then SUBSTRING(CONVERT(varchar(50), b.zipcode), 1, len(CONVERT(varchar(50), b.zipcode))-3) 
					 else CONVERT(varchar(50), b.zipcode) end)

join dbo.Dim_Property_Type h
on h.property_type = CONVERT(varchar(max), b.property_type)
and h.room_type = CONVERT(varchar(max), b.room_type)
and h.accomodates = b.accommodates
and h.bedrooms = b.bedrooms
and h.bathrooms = b.bathrooms

join dbo.dim_review i
on i.ratings_score = ceiling(b.review_scores_rating/20)
and i.Cleanliness_Score = ceiling(b.review_scores_cleanliness/2)
and i.Checkin_Score = ceiling(b.review_scores_checkin/2)
and i.Communication_Score = ceiling(b.review_scores_communication/2)
and i.Location_Score = ceiling(b.review_scores_location/2) 
and i.Value_Score = ceiling(b.review_scores_value/2)
;





/***** Duplicate checks 
delete from dbo.Dim_Property_Type where property_type_key in
(
select property_type_key from
(
select property_type,room_type,accomodates,bedrooms,bathrooms, property_type_key,
rank()over(partition by property_type,room_type,accomodates,bedrooms,bathrooms order by property_type_key) as y
from dbo.Dim_Property_Type
)x where y>1
)
**********/


######### fact_calendar

insert into dbo.fact_calendar (list_key, host_key, date_key)
select distinct
d.list_key,
c.host_key,
e.date_key

from dbo.source_calendar a
join dbo.listings_detailed b
on a.list_id = CONVERT( numeric(18,0), CONVERT(varchar(max), id))

join dbo.dim_host c
on c.host_id = CONVERT( numeric(18,0), CONVERT(varchar(max), b.Host_id))
and c.Active_Ind = 'Y'

join dbo.dim_list d
on d.list_id = a.list_id
and d.Active_Ind = 'Y'

join dbo.Dim_Date e
on a.date = e.Date
;